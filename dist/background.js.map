{"version":3,"file":"background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://reactJS_chrome_extension/./src/background/background.ts"],"sourcesContent":["console.log('this is working from background.ts');\n// import * as tf from '@tensorflow/tfjs';\n// import '@tensorflow/tfjs-backend-cpu';\n// import '@tensorflow/tfjs-backend-webgl';\n// import * as tf from \"@tensorflow/tfjs\";\n// import * as cocoSsd from '@tensorflow-models/coco-ssd';\n// export async function loadModel(): Promise<tf.GraphModel> {\n//   const model = await tf.loadGraphModel('https://tfhub.dev/tensorflow/tfjs-model/coco-ssd/1/default/1');\n//   console.log('Model loaded.');\n//   return model;\n// }\n//   self.addEventListener(\"install\", (event: Event) => {\n//     const extendableEvent = event as ExtendableEvent;\n//     extendableEvent.waitUntil(\n//       loadModel().then(([model, cocoModel]) => {\n//         self[\"model\"] = model;\n//         self[\"cocoModel\"] = cocoModel;\n//       })\n//     );\n//   });\n//   self.addEventListener(\"fetch\", (event: FetchEvent) => {\n//     event.respondWith(fetch(event.request));\n//   });\n//   function openCam(){\n//   const constraints = {\n//     video: true\n//   };\n//   const video = document.querySelector('video');\n//   navigator.mediaDevices.getUserMedia(constraints).\n//     then((stream) => {video.srcObject = stream});\n// }\n// function runCoco (){\n//     async () => {\n//         // 3. TODO - Load network \n//         // e.g. const net = await cocossd.load();\n//         const net = await cocossd.load();\n//         if (!net){\n//           console.error(\"the model is not loaded\")\n//         } \n//           console.log(\"the model is loaded!\")\n//       };\n// } \n// runCoco();\n"],"names":[],"sourceRoot":""}